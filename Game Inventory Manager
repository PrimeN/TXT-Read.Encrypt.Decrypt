#include <iostream>
#include <string>
#include <vector>

using namespace std;

class Inventory {
private:
    vector<string> items;
    int capacity;

public:
    Inventory(int maxCapacity) {
        capacity = maxCapacity;
    }

    void addItem(const string& item) {
        if (items.size() < capacity) {
            items.push_back(item);
            cout << item << " added to the inventory." << endl;
        } else {
            cout << "Inventory is full. Cannot add more items." << endl;
        }
    }

    void removeItem(const string& item) {
        bool removed = false;
        for (size_t i = 0; i < items.size(); i++) {
            if (items[i] == item) {
                items.erase(items.begin() + i);
                cout << item << " removed from the inventory." << endl;
                removed = true;
                break;
            }
        }

        if (!removed) {
            cout << item << " not found in the inventory." << endl;
        }
    }

    void displayInventory() {
        cout << "Inventory:" << endl;
        for (const string& item : items) {
            cout << "- " << item << endl;
        }
    }

    bool checkDuplicate(const string& item) {
        for (const string& i : items) {
            if (i == item) {
                return true;
            }
        }
        return false;
    }
};

int main() {
    int maxCapacity;
    cout << "Enter maximum capacity for the inventory: ";
    cin >> maxCapacity;

    Inventory inventory(maxCapacity);

    char choice;
    string item;

    do {
        cout << endl << "Menu:" << endl;
        cout << "1. Add item" << endl;
        cout << "2. Remove item" << endl;
        cout << "3. Display inventory" << endl;
        cout << "4. Quit" << endl;
        cout << "Enter choice: ";
        cin >> choice;

        switch (choice) {
            case '1': {
                cout << "Enter item to add: ";
                cin.ignore();
                getline(cin, item);
                if (inventory.checkDuplicate(item)) {
                    cout << "Item already exists in the inventory." << endl;
                } else {
                    inventory.addItem(item);
                }
                break;
            }
            case '2': {
                cout << "Enter item to remove: ";
                cin.ignore();
                getline(cin, item);
                inventory.removeItem(item);
                break;
            }
            case '3': {
                inventory.displayInventory();
                break;
            }
            case '4': {
                cout << "Goodbye!" << endl;
                break;
            }
            default: {
                cout << "Invalid choice." << endl;
                break;
            }
        }

    } while (choice != '4');

    return 0;
}
